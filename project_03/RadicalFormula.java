import java.util.Scanner;
import java.text.DecimalFormat;

/** 
 * Computes and prints the value of 
 * x generated by a specific formula. 
 *
 * @author William Hendrix 
 * @version 02-03-2016
 */
public class RadicalFormula 
{
   /**
    * Computes and prints the value of 
    * x generated by a specific formula 
    * using three assignment statements. 
    *
    * @param args Command line arguments (not used).
    */ 
   public static void main(String[] args)
   {
      Scanner userInput = new Scanner(System.in);
      
      System.out.print("Enter a value for x: ");
      double userValue = userInput.nextDouble();
      
      //compute left side of equation
      double x1 = Math.pow((Math.pow(userValue, 8) * 3) 
         - (Math.pow(userValue, 3) * 2), 2);
      
      //compute right side of equation
      double x2 = Math.abs((Math.pow(userValue, 5) * 3) 
         - (Math.pow(userValue, 3) * 2));
         
      //compute result   
      double userResult = Math.sqrt(x1 + x2);
      
      System.out.print("Result: " + userResult + "\n");
      
      //convert double to string
      String userResultString = Double.toString(userResult);
      
      String strResult = new String(userResultString);
      
      int decimalLeft = strResult.indexOf('.');
      System.out.println("# digits to left of decimal point: " + decimalLeft);
      
      int decimalRight = strResult.length() - decimalLeft - 1;
      System.out.println("# digits to right of decimal point: " + decimalRight);
      
      //format result
      String pattern = "###,###,###,###,##0.0##";
      DecimalFormat decimalFormat = new DecimalFormat(pattern);
      
      String formatUserResult = decimalFormat.format(userResult);
      System.out.println("Formatted Result: " + formatUserResult);
            
   }
}
